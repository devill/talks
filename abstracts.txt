BIO
===

Rafael is a Lead Developer at Budapest-based Emarsys and popular speaker in the Hungarian software community.
As a founding member of Emarsys CraftLab - the dedicated coaching team of Emarsys - he has thought university
courses and lectured at numerous conferences. His passion for short feedback loops drove him to create Lean Poker,
a workshop where developers have the opportunity to experiment with continuous delivery in an artificial environment.


Lean Poker
==========


Minimum viable team: testing your ideas alone
==============================================

So you have an idea for a great application, but not much money nor friends to help out. You already asked people
if they would be interested, and they were really supportive, but when it comes to coding you are all alone. For
a developer, who is used to working in a team, it can be really demanding to go through with even a moderately
sized project. You know how to be effective as a team, but the same practices seem to hold you back when you are alone.

In the last few years I started a number of projects alone and managed to build, deploy and validate (or invalidate)
them within weeks of starting the project, and all that as a hobby next to my day job. Taking a few of these projects
as examples, I will tell you what agile practices you should hang on to and what you should change or replace.


Clean persistence
=================

Separating the database layer from the rest of code has always been an important topic, yet more often than not
 web applications end up looking like huge wrappers around the database. Keeping your database related code
 nicely isolated is hard, and it's even harder with applications where most of the logic has to do with reading
 and writing data. We will look at common mistakes, testing, design patterns and polyglot persistence.
